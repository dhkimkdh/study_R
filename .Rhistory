install.packages("ggplot2")
#패키지 설치
install.packages("ggplot2")
library(ggplot2)
x <- c(1,0,5,6)
x
qplot(x)
str5 <- c("hello", "world", "is", "good")
str5
paste(str5, ",")
str6 <- c("hello world is good")
str6
paste(str6, ",")
paste(str5, collapse=",")
paste(str5, collapse="")
paste(str5, collapse=" ")
qplot(data=mpg, x = hwy)
sum(mpg)
qplot(data=mpg, x=drv, y = hwy)
qplot(data=mpg, x=drv, y=hwy, geom="line")
qplot(data=mpg, x=drv, y=hwy, geom="bolxplot")
qplot(data=mpg, x=drv, y=hwy, geom="boxplot")
qplot(data=mpg, x=drv, y=hwy, geom="bolxplot", colour=drv)
qplot(data=mpg, x=drv, y=hwy, geom="boxplot", colour=drv)
scores <- c(80,60,70,50,90)
scores
mean(scroes)
mean(scores)
avg <- mean(scores)
avg
english <- c(50,10,5,100)
english
math <- c(60,30,70,80)
math
name <- c("개똥이", "홍길동", "마초", "태권")
#DataFrame 만들기
df_class <-data.frame(name, english, math)
df_class
영어 <- c(100,50,60)
영어<-c(100,50,60)
#분석하기
#df_class의 데이터표에서 english의 평균값 구하기
mean(df_calss$english)
#분석하기
#df_class의 데이터표에서 english의 평균값 구하기
mean(df_class$english)
mean(df_class$math)
#데이터 프레임 한번에 만들기
df_class2 <-data.frame(name = c("개똥이2", "홍길동2", "마초2", "태권2"),
english = c(50,10,5,100),
math = c(60,30,70,100))
df_class2
max(df_class2$english)
min(df_class2$math)
#외부 데이터 이용하기
install.packages(readxl)
#외부 데이터 이용하기
install.packages("readxl")
library(readxl)
df_exam <- read_excel("excel_exam.xlsx")
df_exam
mean(df_exam$english)
df_exam_error <- read_excel("execl_exam_novar.xlsx")
df_exam_error <- read_excel("execl_exam_novar.xlsx")
df_exam_error <- read_excel("excel_exam_novar.xlsx")
df_exam_error
#col_names = F 파라미터를 사용해서 컬럼명을 가지고 오지 말자
df_exam_error <-read_excel("excel_exam_novar.xlsx")
#col_names = F 파라미터를 사용해서 컬럼명을 가지고 오지 말자
df_exam_error <-read_excel("excel_exam_novar.xlsx", col_names = F)
df_exam_error
#csv파일을 읽어오고 저장을 해보자
df_csv <-read.csv("csv_exam.csv")
df_csv
df_csv <-read.csv("csv_exam.csv")
df_csv
df_csv <-read.csv("csv_exam.csv")
df_csv
df_csv <-read.csv("csv_exam.csv")
df_csv
df_csv <-read.csv("csv_exam.csv", stringsAsFactors = F)
df_csv
#외부파일로 저장해보자
#csv파일로 저장하는 것..패키지 인스톨은 필요없음
#데이타프레임 한번에 만들기
df_save_csv <- data.frame(name = c("개똥이", "천재", "바보")
math = c(80, 90, 50)
english= c(50, 100, 30))
#외부파일로 저장해보자
#csv파일로 저장하는 것..패키지 인스톨은 필요없음
#데이타프레임 한번에 만들기
df_save_csv <- data.frame(name = c(개똥이, 천재, 바보)
math = c(80, 90, 50)
english= c(50, 100, 30))
#외부파일로 저장해보자
#csv파일로 저장하는 것..패키지 인스톨은 필요없음
#데이타프레임 한번에 만들기
df_save_csv <- data.frame(name = c("개똥이", "천재", "바보"),
math = c(80, 90, 50),
english= c(50, 100, 30))
df_save_csv
#만든 것을 저장하자
write.csv(df_save_csv,file="df_save_csv.csv")
#RDS R-언어 전용파일 읽어서 저장하기
df_Rds <- data.frame(english=c(100,50,100),
math=c(50,60,100),
kor=c(100,50,60))
df_Rds
#Rds파일로 저장하기
saveRDS("df_Rds, file="df_Rds.rds"")
#Rds파일로 저장하기
saveRDS(df_Rds, file="df_Rds.rds"")
#Rds파일로 저장하기
saveRDS(df_Rds, file="df_Rds.rds"")
1+1
#Rds파일로 저장하기
saveRDS(df_Rds, file="df_Rds.rds")
#데이터프레임 만든 것을 삭제하기
rm(df_Rds)
df_Rds
#RDS파일 불러오기
df_Rds<- readRDS("df_Rds.rds")
df_Rds
#ggplot2패키지에 들어 있는 mpg데이터 활용하기
install.packages("ggplot2")
library("ggplot2")
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
#Raw 데이터 뒷부분 확인
tail(mpg)
#행과 열의 수를 확인
dim(mpg)
#데이터의 속성 확인
str(mpg)
?mpg
summary(mpg)
install.packages("dplyr")
library(dplyr)
df_raw <- c(var1 = c(1,2,3),
var2 = c(3,6,7))
df_raw
df_raw <- data.frame(var1 = c(1,2,3),
var2 = c(3,6,7))
df_raw
df_new <- df_raw
df_new
#변수명을 바꾸자
df_new <- rename(df_new, v2 = var2)
df_new
#실습
install.packages("ggplot2")
library(ggplot2)
df_mpg <-as.data.frame(ggplot2::mpg)
df_mpg
#mpg 복사본
df_mpgnew <- df_mpg
df_mpgnew
#mpg 변수명 바꾸기 city =cty , highway = hwy
df_mpgnew <- rename(df_mpgnew,city = cty, highway = hwy)
head(df_mpgnew)
df_a <- data.frame(math=c(100,50,60),
kor=c(50,60,80),
english=c(50,80,60))
df_a
#합계가 있는 변수를 만들어보자
df_a$sum <- df_a$(math + kor + english)
#합계가 있는 변수를 만들어보자
df_a$sum <- df_a$math + df_a$kor + df_a$english
df_a
mpg
#mpg 통합연비 평균 생성하기
mpg$total_avg <-(mpg$cty + mpg$hwy)/2
mpg
head(mpg)
#mean (total_avg)평균내기
mean(mpg$total_avg)
#mpg조건문 만들어 기준값 이상이면 합격, 아니면 불합격 만들기
mpg
head(mpg)
#summary요약통계 파악하여 값의 빈도 수를 확인할 수 있는 histogram 생성
summary(mpg$total_avg)
#히스토그램 막대그래프
hist(mpg$total_avg)
hist(df_save_csv$math)
#히스토그램 막대그래프
hist(mpg$total_avg)
#합격 판정 변수 만들기
mpg$test <- ifelse(mpg$total_avg >= 20, "pass", "fail")
head(mpg,10)
#합격 빈도 그래프
hist(mpg$test)
#합격 빈도표 생성
table(mpg$test)
#막대 그래프로 빈도 표현하기
qplot(mpg$test)
mpg
head(mpg)
install.packages(dplyl)
install.packages("dplyl")
library(dplyl)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
mpg
head(mpg,10)
mpg$toal <- rename(mpg, mpg$total = mpg$total_avg)
mpg <- rename(mpg, mpg$total = mpg$total_avg)
mpg <- rename(mpg,total = total_avg)
library(dplyr)
mpg <- rename(mpg,total = total_avg)
head(mpg)
#합격 빈도표 생성하기
table(mpg$test)
#빈도 그래프 생성하기
qplot(mpg$test)
#qplot 함수 올리기
library(ggplot2)
#빈도 그래프 생성하기
qplot(mpg$test)
